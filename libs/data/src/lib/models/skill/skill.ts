import { z } from 'zod'

export enum SkillColor {
  Green = 1, // e.g.) 合気
  Brown, // e.g.) 納刀術
  White, // e.g.) 達人芸
  Red, // e.g.) 攻撃
  Violet, // e.g.) 鬼火纏
  Gray, // e.g.) ガード性能
  Blue, // e.g.) 匠
  PaleBlue, // e.g.) 回避性能
  Pink, // e.g.) 超会心
  Yellow, // e.g.) 業物
  Sky, // e.g.) 水属性攻撃強化
  Orange, // e.g.) 体術
  VividOrange, // e.g.) 逆恨み
}

export const SkillNames = z.enum([
  '攻撃',
  '挑戦者',
  'フルチャージ',
  '逆恨み',
  '死中に活',
  '見切り',
  '超会心',
  '弱点特効',
  '力の解放',
  '渾身',
  '会心撃【属性】',
  '達人芸',
  '火属性攻撃強化',
  '水属性攻撃強化',
  '氷属性攻撃強化',
  '雷属性攻撃強化',
  '龍属性攻撃強化',
  '毒属性強化',
  '麻痺属性強化',
  '睡眠属性強化',
  '爆破属性強化',
  '匠',
  '業物',
  '弾丸節約',
  '剛刃研磨',
  '心眼',
  '弾導強化',
  '鈍器使い',
  '弓溜め段階解放',
  '集中',
  '強化持続',
  'ランナー',
  '体術',
  'スタミナ急速回復',
  'ガード性能',
  'ガード強化',
  '攻めの守勢',
  '抜刀術【技】',
  '抜刀術【力】',
  '納刀術',
  'ＫＯ術',
  'スタミナ奪取',
  '滑走強化',
  '笛吹き名人',
  '砲術',
  '砲弾装填',
  '特殊射撃強化',
  '通常弾・連射矢強化',
  '貫通弾・貫通矢強化',
  '散弾・拡散矢強化',
  '装填拡張',
  '装填速度',
  '反動軽減',
  'ブレ抑制',
  '速射強化',
  '防御',
  '精霊の加護',
  '体力回復量ＵＰ',
  '回復速度',
  '早食い',
  '耳栓',
  '風圧耐性',
  '耐震',
  '泡沫の舞',
  '回避性能',
  '回避距離ＵＰ',
  '火耐性',
  '水耐性',
  '氷耐性',
  '雷耐性',
  '龍耐性',
  '属性やられ耐性',
  '毒耐性',
  '麻痺耐性',
  '睡眠耐性',
  '気絶耐性',
  '泥雪耐性',
  '爆破やられ耐性',
  '植生学',
  '地質学',
  '破壊王',
  '捕獲名人',
  '剥ぎ取り名人',
  '幸運',
  '砥石使用高速化',
  'ボマー',
  'キノコ大好き',
  'アイテム使用強化',
  '広域化',
  '満足感',
  '火事場力',
  '不屈',
  'ひるみ軽減',
  'ジャンプ鉄人',
  '剥ぎ取り鉄人',
  '腹減り耐性',
  '飛び込み',
  '陽動',
  '乗り名人',
  '霞皮の恩恵',
  '鋼殻の恩恵',
  '炎鱗の恩恵',
  '龍気活性',
  '翔蟲使い',
  '壁面移動',
  '逆襲',
  '高速変形',
  '鬼火纏',
  '風紋の一致',
  '雷紋の一致',
  '風雷合一',
  '血氣',
  '伏魔響命',
  '激昂',
  '業鎧【修羅】',
  '災禍転福',
  '狂竜症【蝕】',
  '顕如盤石',
  '闇討ち',
  '巧撃',
  '煽衛',
  '合気',
  '供応',
  'チャージマスター',
  '攻勢',
  'チューンアップ',
  '研磨術【鋭】',
  '刃鱗磨き',
  '壁面移動【翔】',
  '弱点特効【属性】',
  '連撃',
  '根性',
  '疾之息吹',
  '状態異常確定蓄積',
  '剛心',
  '蓄積時攻撃強化',
  '狂化',
  '風纏',
  '粉塵纏',
  '冰気錬成',
  '龍気変換',
  '天衣無崩',
  '狂竜症【翔】',
  '血氣覚醒',
  '奮闘',
  '緩衝',
  '激励',
])
export type SkillNames = z.infer<typeof SkillNames>

export const Skill = z.object({
  /** スキル名 */
  name: SkillNames,

  /** スキルの最大レベル */
  max: z.number().int().min(1),

  /** 検索のメタ情報 */
  keywords: z.array(z.string().min(1)),

  /** 装飾品カラー */
  color: z.nativeEnum(SkillColor),
})
export type Skill = z.infer<typeof Skill>
